{"version":3,"sources":["config/constants/vaults.ts","state/vaults/fetchVaults.ts","state/vaults/fetchVaultUser.ts","state/vaults/index.ts","hooks/useI18n.ts","state/hooks.ts","utils/getRpcUrl.ts","state/farms/index.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","state/actions.ts","components/layout/Container.tsx","components/layout/Page.tsx","config/constants/types.ts","config/constants/contracts.ts","utils/multicall.ts","utils/translateTextHelpers.ts","utils/addressHelpers.ts","config/constants/pools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/index.tsx","components/PageLoader.tsx","views/Nft/components/NftGlobalNotification.tsx","App.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","index.tsx","utils/web3.ts","contexts/Localisation/translationsContext.ts"],"names":["vaults","tokenSymbol","tokenAddress","stakingContract","fetchVaults","a","Promise","all","vaultsConfig","map","farmConfig","calls","address","name","params","multicall","erc20","tokenBalanceStaked","stakingTokenDecimal","totalStaked","BigNumber","axios","get","resp","price","data","console","log","tvl","Number","toNumber","toFixed","toJSON","fetchVaultUserAllowances","account","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchVaultUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchVaultUserDepositBal","masterchefABI","rawBal","parseBal","earnings","fetchVaultUserFinalBal","fetchVaultPenaltyBal","_hex","fetchDepositCheckpoint","fetchRefInfo","rawInfo","parsedRefInfo","info","referrer","referEarnings","referCounts","initialState","vaultsSlice","createSlice","reducers","setVaultsPublicData","state","action","liveVaultsData","payload","vault","liveVaultData","find","f","setVaultUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchVaultsPublicDataAsync","dispatch","fetchVaultUserDataAsync","userVaultAllowances","userVaultTokenBalances","userFinalBal","userDepositBal","userPenalty","depositCheckpoint","refInfo","vaultAllowance","allowance","finalBalance","depositBalance","refferralInfo","useI18n","translations","useContext","TranslationsContext","translationId","fallback","length","getTranslation","ZERO","useFetchPublicData","useDispatch","slowRefresh","useRefresh","useEffect","useVaults","useSelector","useFarmFromPid","pid","farms","useVaultUser","contract","useVaultFromContract","pentaltyTracker","usePriceBnbBusd","tokenPriceVsQuote","usePriceCakeBusd","useTotalValue","value","i","plus","nodes","process","getNodeUrl","randomIndex","random","farmsConfig","farmsSlice","setFarmsPublicData","liveFarmsData","liveFarmData","setFarmUserData","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","fastRefresh","Container","styled","div","theme","mediaQueries","sm","Page","lg","QuoteToken","PoolCategory","cake","56","97","masterChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","refferal","abi","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","decodeFunctionResult","variableRegex","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","TranslateString","getCakeAddress","addresses","chainId","getMasterChefAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getRefferalAddress","pools","nonBnbPools","poolsConfig","filter","p","stakingTokenName","BNB","bnbPools","nonMasterPools","sousId","masterChefContract","masterChefABI","fetchPoolsAllowance","stakingTokenAddress","contractAddress","CHAIN_ID","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","sousChefABI","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingEgg","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","updateUserAllowance","risk","lpSymbol","lpAddresses","tokenAddresses","quoteTokenSymbol","BUSD","quoteTokenAdresses","contracts","isTokenOnly","GlobalStyle","createGlobalStyle","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","setTranslations","storedLangCode","localStorage","getItem","storedLang","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","Menu","props","useWallet","connect","reset","localConfig","label","icon","href","login","logout","currentLang","langs","setLang","cakePriceUsd","links","priceLink","Wrapper","PageLoader","ModalContent","Actions","NftYouWonModal","onDismiss","title","src","alt","style","height","marginBottom","size","color","as","NftGlobalNotification","useModal","onPresentBurnModal","showModal","useRef","document","location","Farms","lazy","NotFound","config","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","refAddress","URL","searchParams","Global","path","tokenMode","component","memo","BlockContext","BlockContextProvider","previousBlock","block","setBlock","getBlockNumber","blockNumber","current","configureStore","devTools","reducer","farmsReducer","poolsReducer","vaultsReduces","Providers","rpcUrl","getRpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","getElementById","RPC_URL","httpProvider","Web3","providers","HttpProvider","timeout","defaultTranslationState"],"mappings":"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","file":"static/js/main.68f25765.chunk.js","sourcesContent":["import { VaultsConfig } from './types'\n\nconst vaults: VaultsConfig[] = [\n  {\n    tokenSymbol: 'WBNB',\n    tokenAddress: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    stakingContract: '0x88979e692F5eE9C6a9bC284bfa81c842b5E375e3',\n  },\n  {\n    tokenSymbol: 'BTCB',\n    tokenAddress: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    stakingContract: '0xf43501fc80335bEB86a98DAddc4061F678fF4f00',\n  },\n  {\n    tokenSymbol: 'ETH',\n    tokenAddress: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    stakingContract: '0x8B6dB3A22Ec606d04b2bA6322E5b754Eebc226e1',\n  },\n  {\n    tokenSymbol: 'USDT',\n    tokenAddress: '0x55d398326f99059ff775485246999027b3197955',\n    stakingContract: '0xd94015f978717A28728C50128704A3425fA031E8',\n  },\n  {\n    tokenSymbol: 'BUSD',\n    tokenAddress: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    stakingContract: '0x40F0D0EdF523B1C6593B63266fF2aBBb218A6329',\n  },\n]\n\nexport default vaults\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport vaultsConfig from 'config/constants/vaults'\nimport axios from \"axios\";\n\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\nconst PRICE_API = `https://api.pancakeswap.info/api/v2/tokens/`\nconst fetchVaults = async () => {\n  const data = await Promise.all(\n    vaultsConfig.map(async (farmConfig) => {\n      const calls = [\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.tokenAddress,\n          name: 'balanceOf',\n          params: [farmConfig.stakingContract],\n        },\n\n        {\n          address: farmConfig.tokenAddress,\n          name: 'decimals',\n        },\n      ]\n\n      const [tokenBalanceStaked, stakingTokenDecimal] = await multicall(erc20, calls)\n      let price;\n      const totalStaked = new BigNumber(tokenBalanceStaked)\n\n      try{\n        const resp = await axios.get(`${PRICE_API}${farmConfig.tokenAddress}`);\n        price = resp.data.data.price;\n        \n      }catch(err){\n        console.log(\"werere\",err)\n      }\n\n      let tvl;\n\n      if(price){\n        tvl = (Number(price)*(totalStaked.toNumber()/1e18)).toFixed(2)\n      }\n      \n      console.log(\"priceee\",price,tvl)\n\n\n\n      return {\n        ...farmConfig,\n        totalStaked:totalStaked.toJSON(),\n        stakingTokenDecimal: new BigNumber(stakingTokenDecimal).toJSON(),\n        price,\n        tvl\n\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchVaults\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/safegains.json'\nimport multicall from 'utils/multicall'\nimport vaultsConfig from 'config/constants/vaults'\n\nexport const fetchVaultUserAllowances = async (account: string) => {\n  const calls = vaultsConfig.map((farm) => {\n    const lpContractAddress = farm.tokenAddress\n    return { address: lpContractAddress, name: 'allowance', params: [account, farm.stakingContract] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchVaultUserTokenBalances = async (account: string) => {\n  const calls = vaultsConfig.map((farm) => {\n    const lpContractAddress = farm.tokenAddress\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchVaultUserDepositBal = async (account: string) => {\n  const calls = vaultsConfig.map((farm) => {\n    return {\n      address: farm.stakingContract,\n      name: 'deposits',\n      params: [account],\n    }\n  })\n\n  const rawBal = await multicall(masterchefABI, calls)\n  const parseBal = rawBal.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parseBal\n}\n\nexport const fetchVaultUserFinalBal = async (account: string) => {\n  const calls = vaultsConfig.map((farm) => {\n    return {\n      address: farm.stakingContract,\n      name: 'finalBalance',\n      params: [account],\n    }\n  })\n\n  const rawBal = await multicall(masterchefABI, calls)\n  const parseBal = rawBal.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parseBal\n}\n\nexport const fetchVaultPenaltyBal = async (account: string) => {\n  const calls = vaultsConfig.map((farm) => {\n    return {\n      address: farm.stakingContract,\n      name: 'getPenalty',\n      params: [account],\n    }\n  })\n\n  const rawBal = await multicall(masterchefABI, calls)\n  const parseBal = rawBal.map((earnings) => {\n    console.log('sasaasas', earnings[0][1])\n    return new BigNumber(earnings[0][1]._hex).toJSON()\n  })\n  return parseBal\n}\n\nexport const fetchDepositCheckpoint = async (account: string) => {\n  const calls = vaultsConfig.map((farm) => {\n    return {\n      address: farm.stakingContract,\n      name: 'depositCheckpoint',\n      params: [account],\n    }\n  })\n\n  const rawBal = await multicall(masterchefABI, calls)\n  const parseBal = rawBal.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parseBal\n}\n\nexport const fetchPenaltyTracker = async (account: string) => {\n  const calls = vaultsConfig.map((farm) => {\n    return {\n      address: farm.stakingContract,\n      name: 'penaltyTracker',\n      params: [account],\n    }\n  })\n\n  const rawBal = await multicall(masterchefABI, calls)\n  const parseBal = rawBal.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parseBal\n}\n\nexport const fetchRefInfo = async (account: string) => {\n  const calls = vaultsConfig.map((farm) => {\n    return {\n      address: farm.stakingContract,\n      name: 'getRefInfo',\n      params: [account],\n    }\n  })\n\n  const rawInfo = await multicall(masterchefABI, calls)\n\n  const parsedRefInfo = rawInfo.map((info) => {\n    return {\n      referrer: info[0],\n      referEarnings: new BigNumber(info[1]._hex).toJSON(),\n      referCounts: new BigNumber(info[2]._hex).toJSON(),\n    }\n  })\n  return parsedRefInfo\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport vaultsConfig from 'config/constants/vaults'\nimport fetchVaults from './fetchVaults'\nimport {\n  fetchRefInfo,\n  // fetchVaultUserEarnings,\n  fetchDepositCheckpoint,\n  fetchVaultPenaltyBal,\n  fetchVaultUserFinalBal,\n  fetchVaultUserAllowances,\n  fetchVaultUserTokenBalances,\n  fetchVaultUserDepositBal,\n  // fetchPenaltyTracker\n} from './fetchVaultUser'\nimport { VaultsState, Vault } from '../types'\n\nconst initialState: VaultsState = { data: [...vaultsConfig] }\n\nexport const vaultsSlice = createSlice({\n  name: 'Vaults',\n  initialState,\n  reducers: {\n    setVaultsPublicData: (state, action) => {\n      const liveVaultsData: Vault[] = action.payload\n\n      state.data = state.data.map((vault) => {\n        const liveVaultData = liveVaultsData.find((f) => f.stakingContract === vault.stakingContract)\n\n        return { ...vault, ...liveVaultData }\n      })\n    },\n    setVaultUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setVaultsPublicData, setVaultUserData } = vaultsSlice.actions\n\n// Thunks\nexport const fetchVaultsPublicDataAsync = () => async (dispatch) => {\n  const vaults = await fetchVaults()\n  dispatch(setVaultsPublicData(vaults))\n}\nexport const fetchVaultUserDataAsync = (account) => async (dispatch) => {\n  console.log('fetchVaultUserDataAsync')\n  const userVaultAllowances = await fetchVaultUserAllowances(account)\n  const userVaultTokenBalances = await fetchVaultUserTokenBalances(account)\n  const userFinalBal = await fetchVaultUserFinalBal(account)\n  const userDepositBal = await fetchVaultUserDepositBal(account)\n  const userPenalty = await fetchVaultPenaltyBal(account)\n  const depositCheckpoint = await fetchDepositCheckpoint(account)\n\n  const refInfo = await fetchRefInfo(account)\n  // const pentaltyTracker = await fetchPenaltyTracker(account);\n\n  const arrayOfUserDataObjects = userVaultAllowances.map((vaultAllowance, index) => {\n    return {\n      index,\n      allowance: userVaultAllowances[index],\n      tokenBalance: userVaultTokenBalances[index],\n      finalBalance: userFinalBal[index],\n      depositBalance: userDepositBal[index],\n      userPenalty: userPenalty[index],\n      depositCheckpoint: depositCheckpoint[index],\n      refferralInfo: refInfo[index],\n      // pentaltyTracker:pentaltyTracker[index]\n    }\n  })\n\n  dispatch(setVaultUserData({ arrayOfUserDataObjects }))\n}\n\nexport default vaultsSlice.reducer\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\n\nimport { fetchVaultsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool, Vault } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchVaultsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useVaults = (): Vault[] => {\n  const vaults = useSelector((state: State) => state.vaults.data)\n  console.log('auktsss', vaults)\n  return vaults\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useVaultFromContract = (contract): Vault => {\n  const vault = useSelector((state: State) => state.vaults.data.find((f) => f.stakingContract === contract))\n  return vault\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\nexport const useVaultUser = (contract) => {\n  const farm = useVaultFromContract(contract)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    depositBalance: farm.userData ? new BigNumber(farm.userData.depositBalance) : new BigNumber(0),\n    finalBalance: farm.userData ? new BigNumber(farm.userData.finalBalance) : new BigNumber(0),\n    userPenalty: farm.userData ? new BigNumber(farm.userData.userPenalty) : new BigNumber(0),\n    depositCheckpoint: farm.userData ? Number(farm.userData.depositCheckpoint) : Number(0),\n    pentaltyTracker: farm.userData ? Number(farm.userData.pentaltyTracker) : Number(0),\n    refferralInfo: {\n      referrer: farm.userData && farm.userData.refferralInfo ? farm.userData.refferralInfo.referrer : '',\n      referEarnings:\n        farm.userData && farm.userData.refferralInfo\n          ? new BigNumber(farm.userData.refferralInfo.referEarnings)\n          : new BigNumber(0),\n      referCounts:\n        farm.userData && farm.userData.refferralInfo ? Number(farm.userData.refferralInfo.referCounts) : Number(0),\n    },\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0 // EGG-BUSD LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const vaults = useVaults()\n  let value = new BigNumber(0)\n  for (let i = 0; i < vaults.length; i++) {\n    const vault = vaults[i]\n    console.log(\"1111\",vault.tvl)\n\n    value = value.plus(Number(vault.tvl))\n  }\n  console.log(\"assasasa\",value.toNumber())\n  return value\n}\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","export { fetchFarmsPublicDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n\nexport { fetchVaultsPublicDataAsync, fetchVaultUserDataAsync } from './vaults'\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56?: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface VaultsConfig {\n  tokenAddress: string\n  tokenSymbol: string\n  stakingContract: string\n  tokenDecimals?: number\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","export default {\n  cake: {\n    56: '0xF952Fc3ca7325Cc27D15885d37117676d25BfdA6',\n    97: '0xF952Fc3ca7325Cc27D15885d37117676d25BfdA6',\n  },\n  masterChef: {\n    56: '0xe70E9185F5ea7Ba3C5d63705784D8563017f2E57',\n    97: '0xe70E9185F5ea7Ba3C5d63705784D8563017f2E57',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n  },\n  refferal: {\n    56: '0x04341f9b0b8CDB294FE0A3CC34f6930c4E3665C1',\n    97: '0x08d49215Be16bd8593c046119A5631Ec668AB99b',\n  },\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n\nexport const getRefferalAddress = () => {\n  return addresses.refferal[chainId]\n}\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 0,\n  //   tokenName: 'CAKE',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://pancakeswap.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '10',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 1,\n  //   tokenName: 'TWT',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n]\n\nexport default pools\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingEgg('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'GAIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x19e7cbecdd23a16dfa5573df54d98f7caae03019',\n    },\n    tokenSymbol: 'GAIN',\n    tokenAddresses: {\n      97: '',\n      56: '0xf952fc3ca7325cc27d15885d37117676d25bfda6',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'GAIN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd1b59d11316e87c3a0a069e80f590ba35cd8d8d3',\n    },\n    tokenSymbol: 'GAIN',\n    tokenAddresses: {\n      97: '',\n      56: '0xf952fc3ca7325cc27d15885d37117676d25bfda6',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 2,\n    risk: 3,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 3,\n    risk: 1,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 4,\n    risk: 2,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7561eee90e24f3b348e1087a005f78b4c8453524',\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 5,\n    risk: 2,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x70d8929d04b60af4fb9b58713ebcf18765ade422',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 6,\n    risk: 1,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc',\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      97: '',\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 7,\n    risk: 1,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      97: '',\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 9,\n    risk: 3,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n    },\n    tokenSymbol: 'DOT',\n    tokenAddresses: {\n      97: '',\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 10,\n    risk: 4,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 11,\n    risk: 4,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 12,\n    risk: 5,\n    isTokenOnly: true,\n    lpSymbol: 'GAIN',\n    lpAddresses: {\n      97: '',\n      56: '0x19e7cbecdd23a16dfa5573df54d98f7caae03019', // EGG-BUSD LP\n    },\n    tokenSymbol: 'GAIN',\n    tokenAddresses: {\n      97: '',\n      56: '0xf952fc3ca7325cc27d15885d37117676d25bfda6',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 13,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'BUSD',\n    lpAddresses: {\n      97: '',\n      56: '0x19e7cbecdd23a16dfa5573df54d98f7caae03019', // EGG-BUSD LP (BUSD-BUSD will ignore)\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '',\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 14,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WBNB',\n    lpAddresses: {\n      97: '',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f', // BNB-BUSD LP\n    },\n    tokenSymbol: 'WBNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 15,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'USDT',\n    lpAddresses: {\n      97: '',\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd', // USDT-BUSD LP\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 16,\n    risk: 2,\n    isTokenOnly: true,\n    lpSymbol: 'BTCB',\n    lpAddresses: {\n      97: '',\n      56: '0xb8875e207ee8096a929d543c9981c9586992eacb', // BTCB-BUSD LP\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 17,\n    risk: 2,\n    isTokenOnly: true,\n    lpSymbol: 'ETH',\n    lpAddresses: {\n      97: '',\n      56: '0xd9a0d1f5e02de2403f68bb71a15f8847a854b494', // ETH-BUSD LP\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 18,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'DAI',\n    lpAddresses: {\n      97: '',\n      56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc', // DAI-BUSD LP\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      97: '',\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 19,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'USDC',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18', // USDC-BUSD LP\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      97: '',\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 20,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'DOT',\n    lpAddresses: {\n      97: '',\n      56: '0x54c1ec2f543966953f2f7564692606ea7d5a184e', // DOT-BUSD LP\n    },\n    tokenSymbol: 'DOT',\n    tokenAddresses: {\n      97: '',\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 21,\n    risk: 4,\n    isTokenOnly: true,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '',\n      56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458', // CAKE-BUSD LP\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 22,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'BSCX',\n    lpAddresses: {\n      97: '',\n      56: '0xa32a983a64ce21834221aa0ad1f1533907553136', // BSCX-BUSD LP\n    },\n    tokenSymbol: 'BSCX',\n    tokenAddresses: {\n      97: '',\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 23,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'AUTO',\n    lpAddresses: {\n      97: '',\n      56: '0x4d0228ebeb39f6d2f29ba528e2d15fc9121ead56', // AUTO-BNB LP\n    },\n    tokenSymbol: 'AUTO',\n    tokenAddresses: {\n      97: '',\n      56: '0xa184088a740c695e156f91f5cc086a06bb78b827',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n]\n\nexport default farms\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Oxanium', cursive;\n  }\n  body {\n    background: url('/images/back.png');\n    background-size: auto 100vh;\n    background-attachment: fixed;\n    ${({ theme }) => theme.mediaQueries.sm}{\n      background-size: 100% 100vh ;\n      background-attachment: fixed;\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  // ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`)\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then((r) => r.json())\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error('ERROR')\n          console.error(e)\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport useI18n from 'hooks/useI18n'\n\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const TranslateString = useI18n()\n\n  const localConfig = [\n    {\n      label: TranslateString(10006, 'Home'),\n      icon: 'HomeIcon',\n      href: '/',\n    },\n    {\n      label: TranslateString(10007, 'HodlerPools'),\n      icon: 'FarmIcon',\n      href: '', //  '/',\n    },\n    {\n      label: TranslateString(10008, 'Audit'),\n      icon: 'AuditUpdatedIcon',\n      href: 'https://paladinsec.co/projects/safegains-finance/', //  'https://www.goosedefi.com/files/hackenAudit.pdf',\n    },\n    {\n      label: TranslateString(10009, 'About Us'),\n      icon: 'AboutIcon',\n      href: '', //  'https://certik.org/projects/goose-finance',\n    },\n  ]\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={0}\n      links={localConfig}\n      priceLink=\"https://www.coingecko.com/en/coins/goose-finance\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, useRef } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Button, Heading, Modal, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\nimport multicall from 'utils/multicall'\n\ninterface NftYouWonModalProps {\n  onDismiss?: () => void\n}\n\nconst ModalContent = styled.div`\n  padding: 24px;\n  text-align: center;\n`\n\nconst Actions = styled.div`\n  text-align: center;\n`\n\nconst NftYouWonModal: React.FC<NftYouWonModalProps> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n  return (\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\n      <ModalContent>\n        <img src=\"/images/present.svg\" alt=\"You won present\" style={{ height: '64px', marginBottom: '24px' }} />\n        <Heading size=\"lg\" color=\"secondary\">\n          {TranslateString(999, 'You won an NFT!')}\n        </Heading>\n      </ModalContent>\n      <Actions>\n        <Button as=\"a\" href=\"/nft\">\n          {TranslateString(999, 'Go to claim NFT')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\n/**\n * 1. Checks if nft supply available\n * 2. If supply is available check if the user can claim\n * 3. If the user can claim show a modal\n */\nconst NftGlobalNotification = () => {\n  const { account } = useWallet()\n  const [onPresentBurnModal] = useModal(<NftYouWonModal />)\n  const showModal = useRef(() => onPresentBurnModal())\n\n  useEffect(() => {\n    const checkNftStatus = async () => {\n      const [totalSupplyDistributedArr, currentDistributedSupplyArr, canClaimArr, hasClaimedArr] = await multicall(\n        rabbitmintingfarm,\n        [\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'totalSupplyDistributed' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'currentDistributedSupply' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'canClaim', params: [account] },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'hasClaimed', params: [account] },\n        ],\n      )\n\n      // TODO: Figure out why these values are coming back as an array\n      const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\n      const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\n      const [canClaim]: [boolean] = canClaimArr\n      const [hasClaimed]: [boolean] = hasClaimedArr\n\n      if (currentDistributedSupply.lt(totalSupplyDistributed) && canClaim && !hasClaimed) {\n        showModal.current()\n      }\n    }\n\n    if (account && !document.location.href.includes('/nft')) {\n      // checkNftStatus()\n    }\n  }, [account, showModal])\n\n  return <div />\n}\n\nexport default NftGlobalNotification\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\nimport NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n    const url = new URL(window.location.href)\n    const refAddress = url.searchParams.get('ref')\n    console.log(refAddress, 'ref address')\n    localStorage.setItem('ref', refAddress)\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            {/* <Route path=\"/\" exact>\n              <Home />\n            </Route> */}\n            <Route path=\"/\">\n              <Farms />\n            </Route>\n            <Route path=\"/nests\">\n              <Farms tokenMode />\n            </Route>\n            {/* <Route path=\"/pools\"> */}\n            {/*  <Pools /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/lottery\"> */}\n            {/*  <Lottery /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      <NftGlobalNotification />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport vaultsReduces from './vaults'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n    vaults: vaultsReduces,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract(abi as unknown as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n"],"sourceRoot":""}