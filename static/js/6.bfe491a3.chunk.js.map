{"version":3,"sources":["hooks/useRefferal.ts","config/index.ts","components/layout/Flex.tsx","utils/formatBalance.ts","components/UnlockButton.tsx","hooks/useWeb3.ts","config/constants/index.ts","utils/erc20.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Farms/components/FarmCard/CardHeading.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/useApprove.ts","views/Home/components/CardValue.tsx","views/Farms/Farms.tsx"],"names":["useRefferal","account","useWallet","fastRefresh","useRefresh","useState","refferdBy","totalRfferal","totalReferralCommissions","result","setResults","useEffect","a","calls","address","getRefferalAddress","name","params","multicall","refferalAbi","rawResults","console","log","data","BigNumber","_hex","toNumber","fetchBalances","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","styled","div","getBalanceNumber","balance","decimals","displayBalance","dividedBy","pow","UnlockButton","props","TranslateString","useI18n","connect","reset","onPresentConnectModal","useWalletModal","onClick","RPC_URL","getRpcUrl","Web3","providers","HttpProvider","timeout","farmsConfig","filter","farm","isCommunity","map","tokenSymbol","getContract","provider","eth","Contract","erc20","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","child","i","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","toLocaleString","times","toString","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","toFixed","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","handleSelectMax","title","fullWidth","variant","disabled","Wrapper","Flex","mediaQueries","sm","Mobile","Tag","Div","CardHeading","multiplier","risk","farmImage","depositFee","removed","cakePrice","useVaultUser","stakingContract","depositBalance","allowance","tokenBalance","finalBalance","lpLabel","userPenalty","depositCheckpoint","refferralInfo","quoteTokenAdresses","quoteTokenSymbol","tokenAddresses","apy","undefined","minimumFractionDigits","maximumFractionDigits","src","alt","width","height","flexDirection","mb","style","marginTop","justifyContent","alignItems","color","bold","fontSize","tvl","totalStaked","RainbowLight","keyframes","FCard","H","borderColor","Heading","expanded","Desktop","PC","One","OneHalf","Two","Three","Four","Five","Six","Bottom","FarmCard","bnbPrice","ethereum","dispatch","useDispatch","requestedApproval","setRequestedApproval","toLowerCase","totalValue","lpTotalInQuoteToken","QuoteToken","BNB","CAKE","Number","abi","STAKING_ABI","lpContract","tokenAddress","handleStake","refferal","localStorage","getItem","methods","deposit","send","from","fetchVaultUserDataAsync","handleWithdraw","withdraw","useModal","onPresentDeposit","onApprove","approve","ethers","constants","MaxUint256","tx","useVaultApprove","handleApprove","error","display","referEarnings","userData","date","Date","renderer","days","hours","minutes","seconds","completed","mt","views","isGreaterThan","push","renderApprovalOrStakeButton","CardValue","prefix","useCountUp","start","end","duration","separator","countUp","update","updateValue","useRef","current","Head","Head2","Upper","Font","h1","getShortAddress","substring","slice","Farms","farmsProps","path","useRouteMatch","vaults","useVaults","usePriceCakeBusd","usePriceBnbBusd","totalValues","tokenMode","useTotalValue","setTVL","stakedOnly","stakedOnlyFarms","vault","farmsList","farmsToDisplay","cakeRewardPerYear","eggPerBlock","poolWeight","comparedTo","Page","margin","marginBottom","toast","success","document","createElement","setAttribute","window","location","origin","body","appendChild","select","execCommand","removeChild","exact"],"mappings":"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","file":"static/js/6.bfe491a3.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport multicall from 'utils/multicall'\nimport { getRefferalAddress } from 'utils/addressHelpers'\nimport refferalAbi from 'config/abi/refferal.json'\n\nimport useRefresh from './useRefresh'\n\nconst useRefferal = () => {\n  const { account } = useWallet()\n  const { fastRefresh } = useRefresh()\n  const [result, setResults] = useState({ refferdBy: '', totalRfferal: 0, totalReferralCommissions: 0 })\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = [\n        {\n          address: getRefferalAddress(),\n          name: 'getReferrer',\n          params: [account],\n        },\n        {\n          address: getRefferalAddress(),\n          name: 'referralsCount',\n          params: [account],\n        },\n        {\n          address: getRefferalAddress(),\n          name: 'totalReferralCommissions',\n          params: [account],\n        },\n      ]\n\n      const rawResults = await multicall(refferalAbi, calls)\n      console.log(rawResults, 'rawresults')\n      const data = result\n      if (rawResults[0][0] === '0x0000000000000000000000000000000000000000') {\n        data.refferdBy = '-'\n      } else {\n        data.refferdBy = rawResults[0][0]\n      }\n\n      data.totalRfferal = new BigNumber(rawResults[1][0]._hex).toNumber()\n      data.totalReferralCommissions = new BigNumber(rawResults[2][0]._hex).toNumber()\n      //  {\n      //     refferdBy: rawResults[0][0],\n      //     totalRfferal: new BigNumber(rawResults[1][0]._hex),\n      //     totalReferralCommissions: new BigNumber(rawResults[2][0]._hex)\n      // }\n      setResults(data)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh, result])\n\n  return result\n}\n\nexport default useRefferal\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 300px;\n    max-width: 100%;\n    width: 100%;\n    // margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract(erc20 as unknown as AbiItem, address)\n  return contract\n}\n\nexport const getStakingContract = (abi: any, provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract(abi as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useVaultUser } from 'state/hooks'\nimport { Tag, Flex, Heading, Image, Text, Skeleton } from '@pancakeswap-libs/uikit'\nimport { CommunityTag, CoreTag, NoFeeTag, RiskTag } from 'components/Tags'\nimport { Vault } from 'state/types'\nimport { TranslateString } from 'utils/translateTextHelpers'\nimport { Address, QuoteToken } from 'config/constants/types'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Vault {\n  quoteTokenSymbol: QuoteToken\n  apy?: BigNumber\n  quoteTokenAmount?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  quoteTokenAdresses?: Address\n  tokenAddresses?: Address\n}\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  risk?: number\n  depositFee?: number\n  farmImage?: string\n  tokenSymbol?: string\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n}\n\nconst Wrapper = styled(Flex)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  // svg {\n  //   margin-right: 0.25rem;\n  // }\n  width: 100%;\n  padding-left: 0rem;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 0.5rem;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\nconst Mobile = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: 1rem;\n  justify-content: center;\n  margin-right: 1rem;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-right: 0rem;\n  }\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  multiplier,\n  risk,\n  farmImage,\n  tokenSymbol,\n  depositFee,\n  farm,\n  removed,\n  cakePrice,\n}) => {\n  const { allowance, tokenBalance, depositBalance, finalBalance, userPenalty, depositCheckpoint, refferralInfo } =\n    useVaultUser(farm.stakingContract)\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\n\n  const lpLabel = farm.tokenSymbol\n  const farmAPY =\n    farm.apy &&\n    farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n\n  return (\n    <Wrapper>\n      <Div>\n        <img\n          src={`/images/farms/${farmImage}.png`}\n          // src=\"https://cryptologos.cc/logos/binance-coin-bnb-logo.png?v=013\"\n\n          alt={tokenSymbol}\n          width={60}\n          height={60}\n        />\n        <Flex flexDirection=\"column\">\n          <Heading mb=\"4px\" style={{ marginTop: '1rem' }}>\n            {lpLabel}\n          </Heading>\n        </Flex>\n      </Div>\n      <Mobile>\n        {/* <Flex justifyContent=\"center\" alignItems=\"center\"  style={{ height: '3rem' ,marginBottom:\"0.5rem\"}} >\n          <Text color=\"rgba(181, 142, 32, 1)\" bold fontSize=\"1.5rem\">\n            Earnings : \n          </Text>\n          <Text bold fontSize=\"1.5rem\" style={{marginLeft:\"0.5rem\"}}>{(getBalanceNumber(finalBalance) - getBalanceNumber(depositBalance)).toFixed(2)}</Text>\n        </Flex> */}\n\n        {!removed && (\n          <Flex justifyContent=\"space-between\" flexDirection=\"column\" alignItems=\"center\">\n            <div >\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text color=\"rgba(181, 142, 32, 1)\" bold fontSize=\"1.5rem\">\n                  {/* {TranslateString(352, 'ROI')} */}\n                  ROI\n                </Text>\n                {/* <ApyButton\n                  lpLabel={lpLabel}\n                  quoteTokenAdresses={quoteTokenAdresses}\n                  quoteTokenSymbol={quoteTokenSymbol}\n                  tokenAddresses={tokenAddresses}\n                  cakePrice={cakePrice}\n                  apy={farm.apy}\n                /> */}\n              </Flex>\n              <Text fontSize=\"1.5rem\" bold>\n                {getBalanceNumber(finalBalance) - getBalanceNumber(depositBalance) ? ((((getBalanceNumber(finalBalance) - getBalanceNumber(depositBalance))) / getBalanceNumber(depositBalance)) * 100).toFixed(2) : 0.00}%\n\n              </Text>\n            </div>\n          </Flex>\n        )}\n\n        <Flex flexDirection=\"column\">\n          <Heading color=\"rgba(181, 142, 32, 1)\" bold style={{ fontSize: '0.9rem' }}>\n            {TranslateString(10010, 'Total Value Locked (TVL)')}\n          </Heading>\n\n          <Text bold style={{ fontSize: '1.5rem' }}>\n            {`$${farm.tvl} `}{' '}\n          </Text>\n          <Text>\n            {`${getBalanceNumber(farm.totalStaked).toFixed(2)} ${farm.tokenSymbol}`} {/* |{' '} */}\n          </Text>\n          {/* <Text bold fontSize=\"1.1rem\">\n            {`${getBalanceNumber(farm.totalStaked).toFixed(2)} ${farm.tokenSymbol}`} |{' '}\n            {`$${getBalanceNumber(farm.totalStaked).toFixed(2)} `}{' '}\n          </Text> */}\n        </Flex>\n      </Mobile>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import React, { useCallback, useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { useVaultUser } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useDispatch } from 'react-redux'\nimport { fetchVaultUserDataAsync } from 'state/vaults'\nimport Countdown from 'react-countdown'\nimport { formatAddress } from 'utils'\nimport UnlockButton from 'components/UnlockButton'\nimport { useVaultApprove } from 'hooks/useApprove'\nimport { getContract, getStakingContract } from 'utils/erc20'\nimport DepositModal from 'views/Pools/components/DepositModal'\nimport WithdrawModal from 'views/Pools/components/WithdrawModal'\nimport STAKING_ABI from 'config/abi/safegains.json'\nimport { Flex, Text, Skeleton, Button, Link, useModal, Heading } from '@pancakeswap-libs/uikit'\nimport { communityFarms } from 'config/constants'\n// 1\nimport { Vault } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { Address, QuoteToken } from 'config/constants/types'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Vault {\n  quoteTokenSymbol: QuoteToken\n  apy?: BigNumber\n  \n  quoteTokenAmount?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  quoteTokenAdresses?: Address\n  tokenAddresses?: Address\n}\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem 0 1.5rem 0;\n  text-align: center;\n  background-image: url('/images/mobileBorder.png');\n  background-size: 100% 100%;\n  background-repeat: no-repeat;\n  height: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    align-self: baseline;\n    padding: 0.5rem 0 1rem 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    position: relative;\n    text-align: center;\n    background-image: url('/images/border.png');\n    background-size: 100% 100%;\n    background-repeat: no-repeat;\n    height: auto;\n    margin-left: 1.8rem;\n    width:100%;\n  }\n`\n\nconst Divider = styled.div`\n  background: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\nconst H = styled(Heading)`\n  padding-top: 1rem;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 1.6rem;\n  }\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\nconst Div = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(1, minmax(100%, 1fr));\n  align-items: center;\n  height: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 23rem;\n    display: grid;\n    grid-template-columns: repeat(2, minmax(50%, 1fr));\n    text-align: center;\n    height: auto;\n    margin-top: 1rem;\n  }\n`\n\nconst Desktop = styled.div`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst PC = styled.div`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    ${({ theme }) => theme.mediaQueries.sm} {\n      width: 23rem;\n      display: grid;\n      grid-template-columns: repeat(2, minmax(50%, 1fr));\n      text-align: center;\n      height: auto;\n      margin-top: 1rem;\n    }\n  }\n`\n\nconst Mobile = styled.div`\n  display: block;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst One = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  // width: 50%;\n`\nconst OneHalf = styled.div``\nconst Two = styled.div``\nconst Three = styled.div``\nconst Four = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\nconst Five = styled.div``\nconst Six = styled.div``\n\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  height: auto;\n  margin-top: 0.5rem;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 16rem;\n    margin-top: 0rem;\n  }\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  bnbPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\n  const TranslateString = useI18n()\n  const { allowance, tokenBalance, depositBalance, finalBalance, userPenalty, depositCheckpoint, refferralInfo } =\n    useVaultUser(farm.stakingContract)\n\n  const dispatch = useDispatch()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n  const [requestedApproval, setRequestedApproval] = useState(false)\n\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n  const farmImage = farm.tokenSymbol.toLowerCase()\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.tokenSymbol\n  const farmAPY =\n    farm.apy &&\n    farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n\n  const stakingContract = useMemo(() => {\n    return getStakingContract(STAKING_ABI, ethereum as provider, farm.stakingContract)\n  }, [ethereum, farm.stakingContract])\n\n  const lpContract = useMemo(() => {\n    return getContract(ethereum as provider, farm.tokenAddress)\n  }, [ethereum, farm.tokenAddress])\n\n  const handleStake = async (value) => {\n    const refferal =\n      localStorage.getItem('ref') !== 'null'\n        ? localStorage.getItem('ref')\n        : '0x0000000000000000000000000000000000000000'\n\n    await stakingContract.methods\n      .deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString(), refferal)\n      .send({\n        from: account,\n      })\n\n    dispatch(fetchVaultUserDataAsync(account))\n\n    console.log('Sasa', value)\n  }\n\n  const handleWithdraw = async (value) => {\n    await stakingContract.methods.withdraw().send({\n      from: account,\n    })\n\n    dispatch(fetchVaultUserDataAsync(account))\n\n    console.log('Sasa', value)\n  }\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} tokenName={farm.tokenSymbol} onConfirm={handleStake} />,\n  )\n\n  const { onApprove } = useVaultApprove(lpContract, farm.stakingContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error('qq q q q   q', e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    const views = []\n\n    if (allowance.isGreaterThan(0)) {\n      views.push(\n        <Button disabled={requestedApproval} onClick={onPresentDeposit} fullWidth>\n          {TranslateString(748, 'Deposit')}\n        </Button>,\n      )\n\n      if (finalBalance.isGreaterThan(0)) {\n        views.push(\n          <Button style={{ marginTop: '1rem' }} fullWidth onClick={handleWithdraw}>\n            {TranslateString(750, 'Withdraw')}\n          </Button>,\n        )\n      }\n    } else {\n      views.push(\n        <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\n          {TranslateString(752, 'Approve Contract')}\n        </Button>,\n      )\n    }\n\n    return views\n  }\n\n  const countDownRenderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return <Text color=\"red\">\n        {TranslateString(10011, 'Penalty Applied')}\n      </Text>\n    }\n    return (\n      <Text bold>\n        D {days}:H {hours}:M {minutes}:S {seconds}\n      </Text>\n    )\n  }\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\n\n  return (\n    <FCard>\n      {/* farm.tokenSymbol === 'EGG' && <StyledCardAccent /> */}\n      <div>\n        <CardHeading\n          lpLabel={lpLabel}\n          multiplier=\"0\"\n          risk={1}\n          depositFee={0}\n          farmImage={farmImage}\n          tokenSymbol={farm.tokenSymbol}\n          farm={farm}\n          removed={removed}\n          cakePrice={cakePrice}\n        />\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <PC>\n          <One>\n            <Text color=\"rgba(181, 142, 32, 1)\" bold fontSize=\"1.8rem\">\n              {TranslateString(733, 'Earnings')}\n            </Text>\n            <Text fontSize=\"1.8rem\" bold>\n              {(getBalanceNumber(finalBalance) - getBalanceNumber(depositBalance)).toFixed(4)}\n            </Text>\n          </One>\n          <OneHalf>\n\n            {!removed && (\n              <Flex justifyContent=\"space-between\" flexDirection=\"column\" alignItems=\"center\">\n                <Flex flexDirection=\"column\" alignItems=\"center\">\n                  <Flex justifyContent=\"space-between\">\n                    <Text color=\"rgba(181, 142, 32, 1)\" bold fontSize=\"1.8rem\">\n                      ROI\n                    </Text>\n                    {/* \n                    <ApyButton\n                      lpLabel={lpLabel}\n                      quoteTokenAdresses={quoteTokenAdresses}\n                      quoteTokenSymbol={quoteTokenSymbol}\n                      tokenAddresses={tokenAddresses}\n                      cakePrice={cakePrice}\n                      apy={farm.apy}\n                    /> */}\n                  </Flex>\n                  <Text fontSize=\"1.8rem\" bold>\n                    {getBalanceNumber(finalBalance) - getBalanceNumber(depositBalance) ? ((((getBalanceNumber(finalBalance) - getBalanceNumber(depositBalance))) / getBalanceNumber(depositBalance)) * 100).toFixed(2) : 0.00}%\n                    {/* {farm.apy ? <>{farmAPY}%</> : <Skeleton height={24} width={80} />} */}\n                  </Text>\n                </Flex>\n              </Flex>\n            )}\n          </OneHalf>\n        </PC>\n        <Div>\n          <Mobile>\n            <One>\n              <Text color=\"rgba(181, 142, 32, 1)\" bold fontSize=\"1.8rem\">\n                {TranslateString(733, 'Earnings')}\n              </Text>\n              <Text fontSize=\"1.8rem\" bold>\n                {(getBalanceNumber(finalBalance) - getBalanceNumber(depositBalance)).toFixed(4)}\n              </Text>\n            </One>\n          </Mobile>\n          <Two>\n            <Text color=\"rgba(181, 142, 32, 1)\" bold>\n              {/* Deposited */}\n              {TranslateString(742, 'Deposited')}\n            </Text>\n            <Text>{getBalanceNumber(depositBalance).toFixed(4)}</Text>\n          </Two>\n          <Three>\n            <Text color=\"rgba(181, 142, 32, 1)\" bold>\n\n              {TranslateString(744, 'Referral Earnings')}\n            </Text>\n            <Text>{refferralInfo.referEarnings ? getBalanceNumber(refferralInfo.referEarnings).toFixed(4) : 0}</Text>\n          </Three>\n          <Four>\n            <Text color=\"rgba(181, 142, 32, 1)\" bold>\n              {TranslateString(740, 'Penalty')}\n            </Text>\n            <Text>{getBalanceNumber(userPenalty).toFixed(4)}</Text>\n          </Four>\n          {/* <Two>\n            <Text color=\"rgba(181, 142, 32, 1)\" bold>\n              {TranslateString(736, 'Referral Counts')}\n            </Text>\n            <Text>{refferralInfo.referCounts ? refferralInfo.referCounts : 0}</Text>\n          </Two> */}\n\n          <Five>\n            <Six>\n              {farm.userData && farm.userData.depositCheckpoint && Number(farm.userData.depositCheckpoint) !== 0 ? (\n                <Flex justifyContent=\"space-between\" flexDirection=\"column\" style={{ height: '3rem' }}>\n                  <Text color=\"rgba(181, 142, 32, 1)\" bold>\n\n\n                    {TranslateString(746, 'Penalty Starts')}\n                  </Text>\n                  <Countdown\n                    date={new Date((Number(farm.userData.depositCheckpoint) + 3888000) * 1000)}\n                    renderer={countDownRenderer}\n                  />\n                </Flex>\n              ) : null}\n            </Six>\n\n         \n          </Five>\n\n          \n         \n\n        </Div>\n      </div>\n      <Bottom>\n        <Desktop>\n          <H color=\"rgba(181, 142, 32, 1)\" bold>\n            {TranslateString(10010, 'Total Value Locked (TVL)')}\n          </H>\n\n          <Text bold style={{ marginTop: '0.7rem', fontSize: '1.5rem' }}>\n            {farm.tvl?`$${farm.tvl} `:\"\"}{' '}\n          </Text>\n          <Text>\n            {`${getBalanceNumber(farm.totalStaked).toFixed(4)} ${farm.tokenSymbol}`} {/* |{' '} */}\n          </Text>\n        </Desktop>\n        <div style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'column' }}>\n          {!account ? <UnlockButton mt=\"8px\" fullWidth /> : null}\n\n          {account ? renderApprovalOrStakeButton() : null}\n        </div>\n      </Bottom>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchVaultUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchVaultUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\nexport const useVaultApprove = (lpContract: Contract, stakingContract: string) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await lpContract.methods.approve(stakingContract, ethers.constants.MaxUint256).send({ from: account })\n\n      dispatch(fetchVaultUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, stakingContract])\n\n  return { onApprove: handleApprove }\n}\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold fontSize={fontSize}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useRefferal from 'hooks/useRefferal'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { provider } from 'web3-core'\nimport { Image, Heading, Button, Text, Flex } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { usePriceBnbBusd, usePriceCakeBusd, useVaults, useVaultUser } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchVaultUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Divider from './components/Divider'\nimport CardValue from '../Home/components/CardValue'\nimport { useTotalValue } from '../../state/hooks'\n\nexport interface FarmsProps {\n  tokenMode?: boolean\n}\n\nconst Head = styled.div`\n  height: 8rem;\n  width: 100%;\n  background-image: url('/images/border.png');\n  background-size: 100% 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0 0 0 1rem;\n  margin: 0;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 9rem;\n    width: 22rem;\n    background-image: url('/1.png');\n    background-size: 100% 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: 0 0.4rem;\n  }\n`\nconst Head2 = styled.div`\n  height: auto;\n  width: 100%;\n  background-image: url('/images/m2.png');\n  background-size: 100% 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem 1rem 1rem 2rem;\n  margin: 0 1rem 0 0;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 8.5rem;\n    width: 35rem;\n    background-image: url('/2.png');\n    background-size: 100% 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin: 0.5rem 0 0 0;\n    padding: 1rem 1rem 1rem 1.5rem;\n  }\n`\n\nconst Upper = styled.div`\n  display: flex;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst Row = styled.div`\n  align-items: start;\n  display: flex;\n  margin-bottom: 16px;\n`\n\nconst Font = styled.h1`\n  font-size: 1.5rem;\n  margin: 2rem 0 2rem 1rem;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 2rem;\n    margin: 2rem 0 2rem 1.8rem;\n  }\n`\n\nconst Desktop = styled.div`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Mobile = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n  margin-top: 1rem;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\n\nconst getShortAddress=(address)=>{\n  \n  if(address){\n    return `${address.substring(0, 4)}...${address.slice(address.length - 4)}`\n  }\n  return \"-\"\n}\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const totalRfferal = useRefferal()\n\n  // const { allowance, tokenBalance, depositBalance, finalBalance, userPenalty, depositCheckpoint, refferralInfo } =\n  //   useVaultUser(farm.stakingContract)\n  // const farmsLP = useFarms()\n  const vaults = useVaults()\n\n  console.log('vaults', vaults)\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { tokenMode } = farmsProps\n\n  // const TranslateString = useI18n()\n  // const data = useGetStats()\n  const totalValues = useTotalValue()\n  const [tvl,setTVL] = useState(0)\n\n  useEffect(()=>{\n    console.log(\"dsdsdssd\",totalValues.toNumber())\n    setTVL(totalValues.toNumber())\n  },[totalValues])\n  // const tvl = totalValue.toFixed(2);\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchVaultUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  // const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\n  // const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\n\n  const stakedOnlyFarms = vaults.filter(\n    (vault) => vault.userData && new BigNumber(vault.userData.depositBalance).isGreaterThan(0),\n  )\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n        const cakeRewardPerBlock = new BigNumber(farm.eggPerBlock || 1)\n          .times(new BigNumber(farm.poolWeight))\n          .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = cakePrice.times(cakeRewardPerYear)\n\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          totalValue = totalValue.times(bnbPrice)\n        }\n\n        if (totalValue.comparedTo(0) > 0) {\n          apy = apy.div(totalValue)\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.stakingContract}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, cakePrice, ethereum],\n  )\n\n  return (\n    <Page>\n      {/* <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {\n          tokenMode ?\n            TranslateString(10002, 'Stake tokens to earn EGG')\n            :\n          TranslateString(320, 'Stake LP tokens to earn EGG')\n        }\n      </Heading>\n      <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {TranslateString(10000, 'Deposit Fee will be used to buyback EGG')}\n      </Heading>\n      <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly}/> */}\n      <Upper>\n        <Head>\n          {/* <img src=\"/images/border.png\" alt=\"h\" /> */}\n          {/* <Desktop >\n        <img src=\"/images/9.png\" alt=\"h\" style={{position:\"absolute\",marginRight:\"20rem\",width:\"5rem\"}} /></Desktop> */}\n          <Heading style={{ margin: '1rem 1rem 0 1rem', fontSize: '1.4rem' }} bold color=\"rgba(181, 142, 32, 1)\">\n            {TranslateString(998, 'Total Value Locked (TVL)')}\n          </Heading>\n\n          <CardValue value={tvl} prefix=\"$\" decimals={4} />\n        </Head>\n\n        {account ? (\n          <div>\n\n\n            <Head2>\n              {/* <Desktop>\n        <img src=\"/images/9.png\" alt=\"h\" style={{position:\"absolute\",margin:\"0 31rem 8rem 0\",width:\"5rem\"}} /></Desktop> */}\n\n              <Desktop>\n                <Flex\n                  style={{ height: '5rem' }}\n                  justifyContent=\"space-between\"\n                  flexDirection=\"column\"\n                  alignItems=\"center\"\n                >\n                  <Text bold color=\"rgba(181, 142, 32, 1)\">\n                    {TranslateString(760, 'Referral Count')}\n                  </Text>\n                  {totalRfferal && <Heading size=\"lg\" style={{ marginBottom: '0.5rem' }}>\n                    {totalRfferal.totalRfferal}\n                    {/* {refferralInfo.referCounts ? refferralInfo.referCounts : 0} */}\n                  </Heading>}\n                </Flex>\n              </Desktop>\n\n              <Flex style={{ margin: '0 1rem' }} flexDirection=\"column\">\n                <Heading size=\"lg\" color=\"rgba(181, 142, 32, 1)\">\n                  {TranslateString(756, 'Your Referral Link')}\n                </Heading>\n                <Button\n                  style={{ marginTop: '0.5rem' }}\n                  onClick={() => {\n                    toast.success('Referral Link Copied')\n                    const input = document.createElement('input')\n                    input.setAttribute('value', `${window.location.origin}?ref=${account}`)\n                    document.body.appendChild(input)\n                    input.select()\n                    document.execCommand('copy')\n                    document.body.removeChild(input)\n                  }}\n                >\n                  {TranslateString(758, 'Copy Referral Link')}\n                </Button>\n              </Flex>\n\n              <Desktop>\n                <Flex\n                  style={{ height: '5rem' }}\n                  justifyContent=\"space-between\"\n                  flexDirection=\"column\"\n                  alignItems=\"center\"\n                >\n                  <Text bold color=\"rgba(181, 142, 32, 1)\">\n                    {TranslateString(10012, 'Referral')}\n\n                  </Text>\n                  {totalRfferal && <Heading size=\"sm\" style={{ marginBottom: '0.5rem' }}>\n                    {getShortAddress(totalRfferal.refferdBy)}\n                  </Heading>\n                  \n                  }\n                </Flex>\n              </Desktop>\n\n              <Mobile>\n                <Flex\n                  style={{ height: '5rem' }}\n                  justifyContent=\"space-between\"\n                  flexDirection=\"column\"\n                  alignItems=\"center\"\n                >\n                  <Text bold color=\"rgba(181, 142, 32, 1)\">\n                    {TranslateString(760, 'Referral Count')}\n                  </Text>\n                  {totalRfferal && <Heading size=\"lg\" style={{ marginBottom: '0.5rem' }}>\n                    {totalRfferal.totalRfferal}\n                    {/* {refferralInfo.referCounts ? refferralInfo.referCounts : 0} */}\n                  </Heading>}\n                </Flex>\n                <Flex\n                  style={{ height: '5rem' }}\n                  justifyContent=\"space-between\"\n                  flexDirection=\"column\"\n                  alignItems=\"center\"\n                >\n                  <Text bold color=\"rgba(181, 142, 32, 1)\">\n                    {TranslateString(10012, 'Referrer')}\n\n                  </Text>\n                  {totalRfferal && <Heading size=\"sm\" style={{ marginBottom: '0.5rem' }}>\n                    {getShortAddress(totalRfferal.refferdBy)}\n                  </Heading>\n                  \n                  }\n                </Flex>\n              </Mobile>\n              <br />\n\n            </Head2>\n            {/* <div style={{display:\"block\", width:\"100%\", marginLeft:\"20px\"}}>\n                <Text>\n                  ROI calculation = (Current Earnings / Deposited) * 100\n\n                </Text>\n              </div> */}\n          </div>\n        ) : null}\n\n      </Upper>\n      <Font>{TranslateString(730, 'Available Hodler Pools')}</Font>\n\n      <div>\n        {/* <Divider /> */}\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(vaults, false)}\n          </Route>\n        </FlexLayout>\n      </div>\n      <ToastContainer />\n      {/* <Image src=\"/images/egg/8.png\" alt=\"illustration\" width={1352} height={587} responsive /> */}\n    </Page>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}